// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VejrstationAPI.Data;

namespace VejrstationAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VejrstationAPI.Models.Sted", b =>
                {
                    b.Property<string>("Navn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("Navn");

                    b.ToTable("Steder");
                });

            modelBuilder.Entity("VejrstationAPI.Models.Vejrobservation", b =>
                {
                    b.Property<int>("VejrobservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Luftfugtighed")
                        .HasColumnType("int");

                    b.Property<double>("Lufttryk")
                        .HasColumnType("float");

                    b.Property<string>("StedNavn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Temperatur")
                        .HasColumnType("float");

                    b.Property<DateTime>("Tidspunkt")
                        .HasColumnType("datetime2");

                    b.HasKey("VejrobservationId");

                    b.HasIndex("StedNavn");

                    b.ToTable("Vejrobservationer");
                });

            modelBuilder.Entity("VejrstationAPI.Models.Vejrobservation", b =>
                {
                    b.HasOne("VejrstationAPI.Models.Sted", "Sted")
                        .WithMany("Vejrobservationer")
                        .HasForeignKey("StedNavn");
                });
#pragma warning restore 612, 618
        }
    }
}
